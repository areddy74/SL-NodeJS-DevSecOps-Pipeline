version: 0.2

env:
  variables:
    PORT: "3000"
    APP_START_CMD: "npm start"
    APP_HEALTH_URL: "http://127.0.0.1:3000/"
    SNYK_SEVERITY_THRESHOLD: "high"
    SNYK_ENFORCE: "false"
    ZAP_FAIL_LEVEL: "1"
    ZAP_ENFORCE: "true"
    ZAP_IMAGE: "ghcr.io/zaproxy/zaproxy:stable"

phases:
  install:
    runtime-versions:
      nodejs: 20
    commands:
      - "echo Checking Docker availability"
      - "docker --version || { echo Docker not found; exit 1; }"

  pre_build:
    commands:
      - "echo Installing node dependencies"
      - "npm ci || npm install"
      - "echo Starting app"
      - "nohup sh -c \"$APP_START_CMD\" >/tmp/app.log 2>&1 &"
      - "echo Waiting for app to be healthy"
      - "bash -lc 'for i in {1..60}; do if curl -fsS \"$APP_HEALTH_URL\" >/dev/null 2>&1; then echo App is up; exit 0; fi; echo Waiting... $i/60; sleep 2; done; echo App did not become healthy; exit 1'"

  build:
    commands:
      - "echo Installing Snyk CLI"
      - "curl -sSL -o /usr/local/bin/snyk https://github.com/snyk/cli/releases/latest/download/snyk-linux"
      - "chmod +x /usr/local/bin/snyk"
      - "echo Authenticating Snyk CLI"
      - "snyk auth \"$SNYK_TOKEN\""
      - "echo Running Snyk test"
      - "bash -lc 'snyk test --severity-threshold=\"$SNYK_SEVERITY_THRESHOLD\" --json-file-output=snyk_report.json; SNYK_EXIT=$?; if [ \"$SNYK_ENFORCE\" = true ] && [ $SNYK_EXIT -ne 0 ]; then echo Snyk failing build exit $SNYK_EXIT; exit $SNYK_EXIT; else echo Snyk exit $SNYK_EXIT; fi'"
      - "echo Running OWASP ZAP baseline scan"
      - "bash -lc 'docker run --rm --network host -v \"$PWD\":/zap/wrk/ \"$ZAP_IMAGE\" zap-baseline.py -t \"$APP_HEALTH_URL\" -r zap_report.html -w zap_warnings.md -x zap_report.xml -m \"$ZAP_FAIL_LEVEL\"; ZAP_EXIT=$?; if [ $ZAP_EXIT -ne 0 ]; then echo Retry ZAP via host.docker.internal; docker run --rm --add-host host.docker.internal:host-gateway -v \"$PWD\":/zap/wrk/ \"$ZAP_IMAGE\" zap-baseline.py -t \"http://host.docker.internal:${PORT}/\" -r zap_report.html -w zap_warnings.md -x zap_report.xml -m \"$ZAP_FAIL_LEVEL\"; ZAP_EXIT=$?; fi; if [ \"$ZAP_ENFORCE\" = true ] && [ $ZAP_EXIT -ne 0 ]; then echo ZAP failing build exit $ZAP_EXIT; exit $ZAP_EXIT; else echo ZAP exit $ZAP_EXIT; fi'"

artifacts:
  files:
    - snyk_report.json
    - zap_report.html
    - zap_warnings.md
    - zap_report.xml
    - /tmp/app.log
  discard-paths: yes
